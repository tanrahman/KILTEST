; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\obj\interrupt.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\interrupt.d --cpu=SC000 --bi --apcs=interwork -O0 -I.\INC -IC:\Keil_v4\ARM\RV31\INC -IC:\Keil_v4\ARM\CMSIS\Include -IC:\Keil_v4\ARM\Device\ARM\ARMSC000\Include --omf_browse=.\obj\interrupt.crf SRC\Interrupt.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  SCIRST_HANDLER PROC
;;;20     ****************************************************************************/ 
;;;21     void SCIRST_HANDLER(void)
000000  b510              PUSH     {r4,lr}
;;;22     {    
;;;23     	SYSINTCLR = 0x01;//clear SCI RST int flag
000002  2001              MOVS     r0,#1
000004  4937              LDR      r1,|L1.228|
000006  6108              STR      r0,[r1,#0x10]
;;;24         
;;;25         SCITA1 = 0x11;//back to default Fi/Di
000008  2011              MOVS     r0,#0x11
00000a  4937              LDR      r1,|L1.232|
00000c  6188              STR      r0,[r1,#0x18]
;;;26     	SCI_RxStart();
00000e  f7fffffe          BL       SCI_RxStart
;;;27     	SCI_WaitRx(0x00);
000012  2000              MOVS     r0,#0
000014  f7fffffe          BL       SCI_WaitRx
;;;28         
;;;29         NVIC_ICER = 1 << IRQ_7816TX;//disable 7816 Tx int 
000018  2001              MOVS     r0,#1
00001a  0240              LSLS     r0,r0,#9
00001c  4933              LDR      r1,|L1.236|
00001e  6008              STR      r0,[r1,#0]
;;;30     
;;;31     	SCI_Send_ATR();
000020  f7fffffe          BL       SCI_Send_ATR
;;;32     	G_bATR_Done = 1;
000024  2001              MOVS     r0,#1
000026  4932              LDR      r1,|L1.240|
000028  7008              STRB     r0,[r1,#0]
;;;33     }
00002a  bd10              POP      {r4,pc}
;;;34     /****************************************************************************
                          ENDP

                  SCIRx_HANDLER PROC
;;;41     ****************************************************************************/ 
;;;42     void SCIRx_HANDLER(void)
00002c  b510              PUSH     {r4,lr}
;;;43     {	
;;;44     	SCISSR &= ~BIT2;//clear SCI Rx int flag
00002e  482e              LDR      r0,|L1.232|
000030  6880              LDR      r0,[r0,#8]
000032  2104              MOVS     r1,#4
000034  4388              BICS     r0,r0,r1
000036  492c              LDR      r1,|L1.232|
000038  6088              STR      r0,[r1,#8]
;;;45     	
;;;46     	G_SCIRecieving = 1;	
00003a  2001              MOVS     r0,#1
00003c  492d              LDR      r1,|L1.244|
00003e  7008              STRB     r0,[r1,#0]
;;;47     	
;;;48     	SCI_StoreNBytes();//copy DATA from FIFO to SCIAPDUBuf
000040  f7fffffe          BL       SCI_StoreNBytes
;;;49         
;;;50         if(G_SCIRecieveDone == 1)
000044  482c              LDR      r0,|L1.248|
000046  7800              LDRB     r0,[r0,#0]  ; G_SCIRecieveDone
000048  2801              CMP      r0,#1
00004a  d100              BNE      |L1.78|
                  |L1.76|
;;;51         {
;;;52             return;
;;;53         }
;;;54         
;;;55         if(SCIAPDUBuf[0] == 0xFF)//CLASS judgement
;;;56         {
;;;57             if(G_SCIRecieveIndex >= 2)
;;;58             {
;;;59                 G_SCIRecieveDone = 1;//pps header got
;;;60             }
;;;61         }
;;;62         else
;;;63         {
;;;64             if(G_SCIRecieveIndex == 5)
;;;65             {
;;;66                 G_SCIRecieveDone = 1;//APDU header got
;;;67                 SCIS60CON = 0x01;//enable sending 0x60 by SCI IP
;;;68             }
;;;69         }
;;;70     }
00004c  bd10              POP      {r4,pc}
                  |L1.78|
00004e  482b              LDR      r0,|L1.252|
000050  7800              LDRB     r0,[r0,#0]            ;55  ; SCIAPDUBuf
000052  28ff              CMP      r0,#0xff              ;55
000054  d107              BNE      |L1.102|
000056  482a              LDR      r0,|L1.256|
000058  8800              LDRH     r0,[r0,#0]            ;57  ; G_SCIRecieveIndex
00005a  2802              CMP      r0,#2                 ;57
00005c  db0c              BLT      |L1.120|
00005e  2001              MOVS     r0,#1                 ;59
000060  4925              LDR      r1,|L1.248|
000062  7008              STRB     r0,[r1,#0]            ;59
000064  e008              B        |L1.120|
                  |L1.102|
000066  4826              LDR      r0,|L1.256|
000068  8800              LDRH     r0,[r0,#0]            ;64  ; G_SCIRecieveIndex
00006a  2805              CMP      r0,#5                 ;64
00006c  d104              BNE      |L1.120|
00006e  2001              MOVS     r0,#1                 ;66
000070  4921              LDR      r1,|L1.248|
000072  7008              STRB     r0,[r1,#0]            ;66
000074  491c              LDR      r1,|L1.232|
000076  61c8              STR      r0,[r1,#0x1c]         ;67
                  |L1.120|
000078  bf00              NOP      
00007a  e7e7              B        |L1.76|
;;;71     /****************************************************************************
                          ENDP

                  SCITx_HANDLER PROC
;;;78     ****************************************************************************/
;;;79     void SCITx_HANDLER(void)
00007c  481a              LDR      r0,|L1.232|
;;;80     {	
;;;81     	SCISSR &= ~BIT4;//clear SCI Tx int flag
00007e  6880              LDR      r0,[r0,#8]
000080  2110              MOVS     r1,#0x10
000082  4388              BICS     r0,r0,r1
000084  4918              LDR      r1,|L1.232|
000086  6088              STR      r0,[r1,#8]
;;;82         
;;;83         if((SCISSR & BIT1) != 0)
000088  4608              MOV      r0,r1
00008a  6880              LDR      r0,[r0,#8]
00008c  2102              MOVS     r1,#2
00008e  4208              TST      r0,r1
000090  d004              BEQ      |L1.156|
;;;84     	{
;;;85             SCISSR &= ~0x02;//as RTS == 1 ,so next byte will be sent 
000092  4815              LDR      r0,|L1.232|
000094  6880              LDR      r0,[r0,#8]
000096  4388              BICS     r0,r0,r1
000098  4913              LDR      r1,|L1.232|
00009a  6088              STR      r0,[r1,#8]
                  |L1.156|
;;;86             /*if last byte PE, no byte be sent below*/
;;;87         }
;;;88         
;;;89     	if(G_SCISendIndex == (SCILeLength+2))
00009c  4819              LDR      r0,|L1.260|
00009e  8801              LDRH     r1,[r0,#0]  ; G_SCISendIndex
0000a0  4819              LDR      r0,|L1.264|
0000a2  6800              LDR      r0,[r0,#0]  ; SCILeLength
0000a4  1c80              ADDS     r0,r0,#2
0000a6  4281              CMP      r1,r0
0000a8  d106              BNE      |L1.184|
;;;90     	{
;;;91     		G_bSCILeSendDone = 1;
0000aa  2001              MOVS     r0,#1
0000ac  4917              LDR      r1,|L1.268|
0000ae  7008              STRB     r0,[r1,#0]
;;;92             NVIC_ICER = 1 << IRQ_7816TX;//disable 7816 Tx int 
0000b0  0240              LSLS     r0,r0,#9
0000b2  490e              LDR      r1,|L1.236|
0000b4  6008              STR      r0,[r1,#0]
                  |L1.182|
;;;93     		return;
;;;94     	}
;;;95     
;;;96         /*le data must all have been input to FIFO,which ensure FIFO available more than two bytes here for SW1SW2*/ 
;;;97         while((SCITXFCR & BIT1) != 0);
;;;98     	/*write SW1SW2*/
;;;99         SCISBUF = SW1SW2 >> 8;
;;;100        SCISBUF = SW1SW2;
;;;101    	G_SCISendIndex += 2;	
;;;102    }
0000b6  4770              BX       lr
                  |L1.184|
0000b8  bf00              NOP                            ;97
                  |L1.186|
0000ba  480b              LDR      r0,|L1.232|
0000bc  6900              LDR      r0,[r0,#0x10]         ;97
0000be  2102              MOVS     r1,#2                 ;97
0000c0  4208              TST      r0,r1                 ;97
0000c2  d1fa              BNE      |L1.186|
0000c4  4812              LDR      r0,|L1.272|
0000c6  8800              LDRH     r0,[r0,#0]            ;99  ; SW1SW2
0000c8  1200              ASRS     r0,r0,#8              ;99
0000ca  4907              LDR      r1,|L1.232|
0000cc  6008              STR      r0,[r1,#0]            ;99
0000ce  4810              LDR      r0,|L1.272|
0000d0  8800              LDRH     r0,[r0,#0]            ;100  ; SW1SW2
0000d2  6008              STR      r0,[r1,#0]            ;100
0000d4  480b              LDR      r0,|L1.260|
0000d6  8800              LDRH     r0,[r0,#0]            ;101  ; G_SCISendIndex
0000d8  1c80              ADDS     r0,r0,#2              ;101
0000da  490a              LDR      r1,|L1.260|
0000dc  8008              STRH     r0,[r1,#0]            ;101
0000de  bf00              NOP      
0000e0  e7e9              B        |L1.182|
;;;103    
                          ENDP

0000e2  0000              DCW      0x0000
                  |L1.228|
                          DCD      0x50007180
                  |L1.232|
                          DCD      0x40001000
                  |L1.236|
                          DCD      0xe000e180
                  |L1.240|
                          DCD      G_bATR_Done
                  |L1.244|
                          DCD      G_SCIRecieving
                  |L1.248|
                          DCD      G_SCIRecieveDone
                  |L1.252|
                          DCD      SCIAPDUBuf
                  |L1.256|
                          DCD      G_SCIRecieveIndex
                  |L1.260|
                          DCD      G_SCISendIndex
                  |L1.264|
                          DCD      SCILeLength
                  |L1.268|
                          DCD      G_bSCILeSendDone
                  |L1.272|
                          DCD      SW1SW2
