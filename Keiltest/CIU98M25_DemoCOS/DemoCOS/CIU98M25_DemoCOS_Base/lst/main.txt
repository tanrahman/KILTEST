; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=SC000 --bi --apcs=interwork -O0 -I.\INC -IC:\Keil_v4\ARM\RV31\INC -IC:\Keil_v4\ARM\CMSIS\Include -IC:\Keil_v4\ARM\Device\ARM\ARMSC000\Include --omf_browse=.\obj\main.crf SRC\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;50     ****************************************************************************/
;;;51     int main(void)
000000  f7fffffe          BL       HCI_GVar_Init
;;;52     {
;;;53     	INT32U result;
;;;54         
;;;55         ;//if neccessary,COS initialize variables group 1 in HCI_lib_GVar.c
;;;56         
;;;57     	HCI_GVar_Init();//SWP interface global variables' init
;;;58     	GVar_SCI_Init();//SCI interface init	
000004  f7fffffe          BL       GVar_SCI_Init
;;;59     	RF_Config();//RF related init
000008  f7fffffe          BL       RF_Config
;;;60         SYSNVMCON = 0x01;//m1 related init
00000c  2001              MOVS     r0,#1
00000e  493d              LDR      r1,|L1.260|
000010  6088              STR      r0,[r1,#8]
;;;61         G_cM1_Mode = 0x04;
000012  2004              MOVS     r0,#4
000014  493c              LDR      r1,|L1.264|
000016  7008              STRB     r0,[r1,#0]
;;;62     
;;;63     	while ((G_bSWP_DetectStatus == 0) && (G_bATR_Done == 0))
000018  bf00              NOP      
                  |L1.26|
00001a  483c              LDR      r0,|L1.268|
00001c  7800              LDRB     r0,[r0,#0]  ; G_bSWP_DetectStatus
00001e  2800              CMP      r0,#0
000020  d103              BNE      |L1.42|
000022  483b              LDR      r0,|L1.272|
000024  7800              LDRB     r0,[r0,#0]  ; G_bATR_Done
000026  2800              CMP      r0,#0
000028  d0f7              BEQ      |L1.26|
                  |L1.42|
;;;64     	{
;;;65     		;//no interface no work 
;;;66     	}
;;;67     
;;;68     	while(1)
00002a  e06a              B        |L1.258|
                  |L1.44|
;;;69     	{
;;;70     		if(G_bCLKSwitchValid == 0)
00002c  4839              LDR      r0,|L1.276|
00002e  7800              LDRB     r0,[r0,#0]  ; G_bCLKSwitchValid
000030  2800              CMP      r0,#0
000032  d122              BNE      |L1.122|
;;;71     		{
;;;72     			if (G_bATR_Done == 1)
000034  4836              LDR      r0,|L1.272|
000036  7800              LDRB     r0,[r0,#0]  ; G_bATR_Done
000038  2801              CMP      r0,#1
00003a  d107              BNE      |L1.76|
;;;73     			{
;;;74     				HED_ChangeSYSFreq(SYSCLK_AHB_36Mhz,APB_EQU_AHB);//switch SYSCLK to high level
00003c  2100              MOVS     r1,#0
00003e  4608              MOV      r0,r1
000040  f7fffffe          BL       HED_ChangeSYSFreq
;;;75                     //set MAX sys clk 36Mhz here,but 18Mhz on Develepment Tool
;;;76     				G_bCLKSwitchValid = 1;
000044  2001              MOVS     r0,#1
000046  4933              LDR      r1,|L1.276|
000048  7008              STRB     r0,[r1,#0]
00004a  e016              B        |L1.122|
                  |L1.76|
;;;77     			}
;;;78     			else if(G_bSWP_busy == 1)
00004c  4832              LDR      r0,|L1.280|
00004e  7800              LDRB     r0,[r0,#0]  ; G_bSWP_busy
000050  2801              CMP      r0,#1
000052  d112              BNE      |L1.122|
;;;79     			{
;;;80           			if(G_bPowerMode == 0)
000054  4831              LDR      r0,|L1.284|
000056  7800              LDRB     r0,[r0,#0]  ; G_bPowerMode
000058  2800              CMP      r0,#0
00005a  d104              BNE      |L1.102|
;;;81     				{
;;;82     					HED_ChangeSYSFreq(SYSCLK_AHB_18Mhz,APB_EQU_AHB);//switch SYSCLK to low level
00005c  2100              MOVS     r1,#0
00005e  2001              MOVS     r0,#1
000060  f7fffffe          BL       HED_ChangeSYSFreq
000064  e003              B        |L1.110|
                  |L1.102|
;;;83                         //set MAX sys clk 18Mhz here,but 9Mhz on Develepment Tool
;;;84     				}
;;;85     				else  
;;;86     				{
;;;87                     	HED_ChangeSYSFreq(SYSCLK_AHB_36Mhz,APB_EQU_AHB);//switch SYSCLK to high level
000066  2100              MOVS     r1,#0
000068  4608              MOV      r0,r1
00006a  f7fffffe          BL       HED_ChangeSYSFreq
                  |L1.110|
;;;88                         //set MAX sys clk 36Mhz here,but 9Mhz on Develepment Tool
;;;89     				}
;;;90     
;;;91     				if(G_bSHDLC_Status == 1)
00006e  482c              LDR      r0,|L1.288|
000070  7800              LDRB     r0,[r0,#0]  ; G_bSHDLC_Status
000072  2801              CMP      r0,#1
000074  d101              BNE      |L1.122|
;;;92     				{
;;;93                         G_bCLKSwitchValid = 1;
000076  4927              LDR      r1,|L1.276|
000078  7008              STRB     r0,[r1,#0]
                  |L1.122|
;;;94     				}
;;;95     			}
;;;96     		}
;;;97     		
;;;98     		if((G_bSWP_busy == 0) && (G_SCIRecieving == 0) && (G_bSCILeSendDone == 1)) 
00007a  4827              LDR      r0,|L1.280|
00007c  7800              LDRB     r0,[r0,#0]  ; G_bSWP_busy
00007e  2800              CMP      r0,#0
000080  d101              BNE      |L1.134|
000082  4828              LDR      r0,|L1.292|
000084  7800              LDRB     r0,[r0,#0]  ; G_SCIRecieving
                  |L1.134|
;;;99     		{
;;;100    			/*if run on Develepment Tool's DEBUG MODE,don't enter standby*/
;;;101                /*if run on Develepment Tool's RUN MODE,do enter standby*/
;;;102    			//HED_SetToStandby();//set chip to standby          
;;;103    		}
;;;104    		
;;;105    		if(G_SCIRecieveDone == 1)
000086  4828              LDR      r0,|L1.296|
000088  7800              LDRB     r0,[r0,#0]  ; G_SCIRecieveDone
00008a  2801              CMP      r0,#1
00008c  d10f              BNE      |L1.174|
;;;106    		{
;;;107    			if(SCIAPDUBuf[0] == 0xFF)
00008e  4827              LDR      r0,|L1.300|
000090  7800              LDRB     r0,[r0,#0]  ; SCIAPDUBuf
000092  28ff              CMP      r0,#0xff
000094  d105              BNE      |L1.162|
;;;108    			{
;;;109    				PpsExchange();//pps process
000096  f7fffffe          BL       PpsExchange
;;;110    				SCI_WaitRx(0x00);
00009a  2000              MOVS     r0,#0
00009c  f7fffffe          BL       SCI_WaitRx
0000a0  e005              B        |L1.174|
                  |L1.162|
;;;111    			}
;;;112    			else
;;;113    			{  				
;;;114    				openWrSwitch();
0000a2  f7fffffe          BL       openWrSwitch
;;;115                    SCIAPDU_Dispatch();//APDU process
0000a6  f7fffffe          BL       SCIAPDU_Dispatch
;;;116                    closeWrSwitch();
0000aa  f7fffffe          BL       closeWrSwitch
                  |L1.174|
;;;117    			}
;;;118    		}
;;;119            
;;;120            openWrSwitch();
0000ae  f7fffffe          BL       openWrSwitch
;;;121    		result = HCI_RxManage();//HCI process
0000b2  f7fffffe          BL       HCI_RxManage
0000b6  4604              MOV      r4,r0
;;;122            closeWrSwitch();
0000b8  f7fffffe          BL       closeWrSwitch
;;;123            
;;;124    		if(result == 0x11)//output data available from HCI Layer
0000bc  2c11              CMP      r4,#0x11
0000be  d112              BNE      |L1.230|
;;;125    		{
;;;126    			if(G_HCIMode == 0)//card emulation mode
0000c0  481b              LDR      r0,|L1.304|
0000c2  7800              LDRB     r0,[r0,#0]  ; G_HCIMode
0000c4  2800              CMP      r0,#0
0000c6  d11c              BNE      |L1.258|
;;;127    			{
;;;128    				if((result == 0x11) && (G_bRFIndicator == 0))//APDU received on card emulation mode 
0000c8  2c11              CMP      r4,#0x11
0000ca  d11a              BNE      |L1.258|
0000cc  4819              LDR      r0,|L1.308|
0000ce  7800              LDRB     r0,[r0,#0]  ; G_bRFIndicator
0000d0  2800              CMP      r0,#0
0000d2  d116              BNE      |L1.258|
;;;129    				{
;;;130    					openWrSwitch();
0000d4  f7fffffe          BL       openWrSwitch
;;;131                        SWPAPDU_Dispatch();//SWP C_APDU process
0000d8  f7fffffe          BL       SWPAPDU_Dispatch
;;;132                        closeWrSwitch();
0000dc  f7fffffe          BL       closeWrSwitch
;;;133    					HCI_CardMode_Send();//send R_APDU
0000e0  f7fffffe          BL       HCI_CardMode_Send
0000e4  e00d              B        |L1.258|
                  |L1.230|
;;;134    				}
;;;135    			}			
;;;136    		}
;;;137            else if(result == 0x15)
0000e6  2c15              CMP      r4,#0x15
0000e8  d108              BNE      |L1.252|
;;;138            {
;;;139                openWrSwitch();
0000ea  f7fffffe          BL       openWrSwitch
;;;140                SWPAPDU_Dispatch_APDU_GATE();//SWP C_APDU process
0000ee  f7fffffe          BL       SWPAPDU_Dispatch_APDU_GATE
;;;141                closeWrSwitch();
0000f2  f7fffffe          BL       closeWrSwitch
;;;142                HCI_APDU_Gate_Send();//send R_APDU
0000f6  f7fffffe          BL       HCI_APDU_Gate_Send
0000fa  e002              B        |L1.258|
                  |L1.252|
;;;143            }
;;;144            else if(result == 0x61)
0000fc  2c61              CMP      r4,#0x61
0000fe  d000              BEQ      |L1.258|
;;;145            {
;;;146                ;
;;;147            } 
;;;148            else if(result == 0x62)
000100  bf00              NOP      
                  |L1.258|
000102  e793              B        |L1.44|
;;;149            {
;;;150                ;
;;;151            }         
;;;152    	}
;;;153    }
                          ENDP

                  |L1.260|
                          DCD      0x50007080
                  |L1.264|
                          DCD      G_cM1_Mode
                  |L1.268|
                          DCD      G_bSWP_DetectStatus
                  |L1.272|
                          DCD      G_bATR_Done
                  |L1.276|
                          DCD      G_bCLKSwitchValid
                  |L1.280|
                          DCD      G_bSWP_busy
                  |L1.284|
                          DCD      G_bPowerMode
                  |L1.288|
                          DCD      G_bSHDLC_Status
                  |L1.292|
                          DCD      G_SCIRecieving
                  |L1.296|
                          DCD      G_SCIRecieveDone
                  |L1.300|
                          DCD      SCIAPDUBuf
                  |L1.304|
                          DCD      G_HCIMode
                  |L1.308|
                          DCD      G_bRFIndicator

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  G_bATR_Done
                          %        1
                  G_SCIRecieving
                          %        1
                  SCIAPDUBuf
                          %        260

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  G_ATR
000000  0d3b9696          DCB      0x0d,0x3b,0x96,0x96
000004  803f47a0          DCB      0x80,0x3f,0x47,0xa0
000008  811701dd          DCB      0x81,0x17,0x01,0xdd
00000c  b019              DCB      0xb0,0x19

                          AREA ||.data||, DATA, ALIGN=2

                  G_SCIRecieveIndex
000000  0000              DCB      0x00,0x00
                  G_SCIRecieveDone
000002  0000              DCB      0x00,0x00
                  G_SCISendIndex
000004  0000              DCB      0x00,0x00
                  G_bSCILeSendDone
000006  0000              DCB      0x00,0x00
                  SCILeLength
                          DCD      0x00000000
                  SW1SW2
00000c  0000              DCB      0x00,0x00
                  SW1SW2_SWP
00000e  0000              DCB      0x00,0x00
                  SW1SW2_SWP_APDU_Gate
000010  0000              DCB      0x00,0x00

                  __ARM_use_no_argv EQU 0
