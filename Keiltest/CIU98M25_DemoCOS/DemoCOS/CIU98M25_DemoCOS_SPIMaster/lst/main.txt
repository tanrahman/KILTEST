; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=SC000 --bi --apcs=interwork -O0 -I.\INC -IC:\Keil_v4\ARM\RV31\INC -IC:\Keil_v4\ARM\CMSIS\Include -IC:\Keil_v4\ARM\Device\ARM\ARMSC000\Include --omf_browse=.\obj\main.crf SRC\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;40     ****************************************************************************/
;;;41     int main(void)
000000  f7fffffe          BL       closeWrSwitch
;;;42     {    
;;;43         closeWrSwitch();//disable NVM operation
;;;44         
;;;45         SYSCLKEN |= (1 << 18) | (1 << 19);//enable GPIO/SPI clk    
000004  4821              LDR      r0,|L1.140|
000006  6800              LDR      r0,[r0,#0]
000008  2103              MOVS     r1,#3
00000a  0489              LSLS     r1,r1,#18
00000c  4308              ORRS     r0,r0,r1
00000e  491f              LDR      r1,|L1.140|
000010  6008              STR      r0,[r1,#0]
;;;46         HED_DEMO_SPI_Init();//spi init
000012  f7fffffe          BL       HED_DEMO_SPI_Init
;;;47         
;;;48         while((SYSRSTFLAG & BIT2) == 0);
000016  bf00              NOP      
                  |L1.24|
000018  481c              LDR      r0,|L1.140|
00001a  3880              SUBS     r0,r0,#0x80
00001c  6840              LDR      r0,[r0,#4]
00001e  2104              MOVS     r1,#4
000020  4208              TST      r0,r1
000022  d0f9              BEQ      |L1.24|
;;;49     
;;;50         if((SYSRSTFLAG & BIT9) != 0)
000024  4819              LDR      r0,|L1.140|
000026  3880              SUBS     r0,r0,#0x80
000028  6840              LDR      r0,[r0,#4]
;;;51         {//cold reset
;;;52             ;
;;;53         }
;;;54         else
;;;55         {//warm reset
;;;56             ;
;;;57         }        
;;;58         G_FiDi = 0x11;
00002a  2011              MOVS     r0,#0x11
00002c  4918              LDR      r1,|L1.144|
00002e  7008              STRB     r0,[r1,#0]
;;;59         HED_T0_SendNBytes(G_ATR+1,G_ATR[0]);//send ATR
000030  4818              LDR      r0,|L1.148|
000032  7801              LDRB     r1,[r0,#0]  ; G_ATR
000034  1c40              ADDS     r0,r0,#1
000036  f7fffffe          BL       HED_T0_SendNBytes
;;;60         HED_ChangeSYSFreq(SYSCLK_AHB_36Mhz,APB_EQU_AHB);//switch SYSCLK to high level
00003a  2100              MOVS     r1,#0
00003c  4608              MOV      r0,r1
00003e  f7fffffe          BL       HED_ChangeSYSFreq
;;;61         SYSRSTFLAG = 0;
000042  2000              MOVS     r0,#0
000044  4911              LDR      r1,|L1.140|
000046  3980              SUBS     r1,r1,#0x80
000048  6048              STR      r0,[r1,#4]
;;;62     
;;;63         while(1)
00004a  e01d              B        |L1.136|
                  |L1.76|
;;;64         {
;;;65             /*if run on Develepment Tool's DEBUG MODE,don't enter standby*/
;;;66             /*if run on Develepment Tool's RUN MODE,do enter standby*/        
;;;67             //HED_SetToStandby();
;;;68             
;;;69             HED_T0_ReceiveNBytesRam(SCIAPDUBuf,1);
00004c  2101              MOVS     r1,#1
00004e  4812              LDR      r0,|L1.152|
000050  f7fffffe          BL       HED_T0_ReceiveNBytesRam
;;;70             if (SCIAPDUBuf[0] == 0xFF)
000054  4810              LDR      r0,|L1.152|
000056  7800              LDRB     r0,[r0,#0]  ; SCIAPDUBuf
000058  28ff              CMP      r0,#0xff
00005a  d102              BNE      |L1.98|
;;;71             {
;;;72                 DEMOCOS_PPS();
00005c  f7fffffe          BL       DEMOCOS_PPS
000060  e012              B        |L1.136|
                  |L1.98|
;;;73             }
;;;74             else
;;;75             {
;;;76                 HED_T0_ReceiveNBytesRam (SCIAPDUBuf+1, 4);
000062  2104              MOVS     r1,#4
000064  480c              LDR      r0,|L1.152|
000066  1c40              ADDS     r0,r0,#1
000068  f7fffffe          BL       HED_T0_ReceiveNBytesRam
;;;77                 
;;;78                 openWrSwitch();//enable NVM operation            
00006c  f7fffffe          BL       openWrSwitch
;;;79                 DemoCos_APDU_Dispatch();            
000070  f7fffffe          BL       DemoCos_APDU_Dispatch
;;;80                 closeWrSwitch();//disable NVM operation
000074  f7fffffe          BL       closeWrSwitch
;;;81                 
;;;82                 DemoCos_DelayNETU(4);
000078  2004              MOVS     r0,#4
00007a  f7fffffe          BL       DemoCos_DelayNETU
;;;83                 HED_T0_SendNBytes(SCIAPDUBuf,G_APDU_SxLen);
00007e  4807              LDR      r0,|L1.156|
000080  8801              LDRH     r1,[r0,#0]  ; G_APDU_SxLen
000082  4805              LDR      r0,|L1.152|
000084  f7fffffe          BL       HED_T0_SendNBytes
                  |L1.136|
000088  e7e0              B        |L1.76|
;;;84             }            
;;;85         }
;;;86     }
                          ENDP

00008a  0000              DCW      0x0000
                  |L1.140|
                          DCD      0x50007200
                  |L1.144|
                          DCD      G_FiDi
                  |L1.148|
                          DCD      G_ATR
                  |L1.152|
                          DCD      SCIAPDUBuf
                  |L1.156|
                          DCD      G_APDU_SxLen

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  SCIAPDUBuf
                          %        260

                          AREA ||.data||, DATA, ALIGN=1

                  G_ATR
000000  07068117          DCB      0x07,0x06,0x81,0x17
000004  01ddb210          DCB      0x01,0xdd,0xb2,0x10
                  G_APDU_SxLen
000008  0000              DCB      0x00,0x00
                  SW1SW2
00000a  0000              DCB      0x00,0x00
                  G_FiDi
00000c  00                DCB      0x00

                  __ARM_use_no_argv EQU 0
