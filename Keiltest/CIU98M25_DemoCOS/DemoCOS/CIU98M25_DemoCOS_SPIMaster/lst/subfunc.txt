; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\obj\subfunc.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\subfunc.d --cpu=SC000 --bi --apcs=interwork -O0 -I.\INC -IC:\Keil_v4\ARM\RV31\INC -IC:\Keil_v4\ARM\CMSIS\Include -IC:\Keil_v4\ARM\Device\ARM\ARMSC000\Include --omf_browse=.\obj\subfunc.crf SRC\SubFunc.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  DemoCos_DelayNETU PROC
;;;46     ****************************************************************************/
;;;47     void DemoCos_DelayNETU(unsigned int nETU)
000000  e00c              B        |L1.28|
                  |L1.2|
;;;48     {
;;;49     	while(nETU)
;;;50     	{
;;;51         	SCISSR |= BIT6;/* Begin 1ETU counter */
000002  4955              LDR      r1,|L1.344|
000004  6889              LDR      r1,[r1,#8]
000006  2240              MOVS     r2,#0x40
000008  4311              ORRS     r1,r1,r2
00000a  4a53              LDR      r2,|L1.344|
00000c  6091              STR      r1,[r2,#8]
;;;52         	while((SCISSR & BIT6) != 0)
00000e  bf00              NOP      
                  |L1.16|
000010  4951              LDR      r1,|L1.344|
000012  6889              LDR      r1,[r1,#8]
000014  2240              MOVS     r2,#0x40
000016  4211              TST      r1,r2
000018  d1fa              BNE      |L1.16|
;;;53         	{
;;;54     			;
;;;55         	}
;;;56     		nETU--;
00001a  1e40              SUBS     r0,r0,#1
                  |L1.28|
00001c  2800              CMP      r0,#0                 ;49
00001e  d1f0              BNE      |L1.2|
;;;57     	}
;;;58     }
000020  4770              BX       lr
;;;59     /*************************************************
                          ENDP

                  DEMOCOS_PPS PROC
;;;66     *************************************************/ 
;;;67     void DEMOCOS_PPS(void)
000022  b5f8              PUSH     {r3-r7,lr}
;;;68     {
;;;69     	
;;;70     	register INT32U len,pck;
;;;71     	register INT32U i;
;;;72         INT8U  PPSFailRES[3] = {0xFF,0x00,0xFF};
000024  a04d              ADR      r0,|L1.348|
000026  6800              LDR      r0,[r0,#0]
000028  9000              STR      r0,[sp,#0]
;;;73         
;;;74     
;;;75     	PPS_PPSS = 0xff;
00002a  20ff              MOVS     r0,#0xff
00002c  494c              LDR      r1,|L1.352|
00002e  7008              STRB     r0,[r1,#0]
;;;76     	len = 1; 
000030  2601              MOVS     r6,#1
;;;77         HED_T0_ReceiveNBytesRam(SCIAPDUBuf+1,1);
000032  2101              MOVS     r1,#1
000034  484a              LDR      r0,|L1.352|
000036  1c40              ADDS     r0,r0,#1
000038  f7fffffe          BL       HED_T0_ReceiveNBytesRam
;;;78     	for (i = 4; i<7; i++)
00003c  2404              MOVS     r4,#4
00003e  e007              B        |L1.80|
                  |L1.64|
;;;79     	{
;;;80     		if (((PPS_PPS0 >> i) & 1) == 1)
000040  4847              LDR      r0,|L1.352|
000042  7840              LDRB     r0,[r0,#1]  ; SCIAPDUBuf
000044  4120              ASRS     r0,r0,r4
000046  07c0              LSLS     r0,r0,#31
000048  0fc0              LSRS     r0,r0,#31
00004a  d000              BEQ      |L1.78|
;;;81     			len++;
00004c  1c76              ADDS     r6,r6,#1
                  |L1.78|
00004e  1c64              ADDS     r4,r4,#1              ;78
                  |L1.80|
000050  2c07              CMP      r4,#7                 ;78
000052  d3f5              BCC      |L1.64|
;;;82     	}
;;;83     	
;;;84     	HED_T0_ReceiveNBytesRam(SCIAPDUBuf+2,len);
000054  4631              MOV      r1,r6
000056  4842              LDR      r0,|L1.352|
000058  1c80              ADDS     r0,r0,#2
00005a  f7fffffe          BL       HED_T0_ReceiveNBytesRam
;;;85     
;;;86     	/*get PCK */
;;;87     	pck = 0x00;
00005e  2500              MOVS     r5,#0
;;;88     	for (i = 0; i<(len+2); i++)
000060  2400              MOVS     r4,#0
000062  e003              B        |L1.108|
                  |L1.100|
;;;89     	{
;;;90     		pck = pck ^ SCIAPDUBuf[i];
000064  483e              LDR      r0,|L1.352|
000066  5d00              LDRB     r0,[r0,r4]
000068  4045              EORS     r5,r5,r0
00006a  1c64              ADDS     r4,r4,#1              ;88
                  |L1.108|
00006c  1cb0              ADDS     r0,r6,#2              ;88
00006e  4284              CMP      r4,r0                 ;88
000070  d3f8              BCC      |L1.100|
;;;91     	}
;;;92     	if (pck == 0)
000072  2d00              CMP      r5,#0
000074  d13a              BNE      |L1.236|
;;;93     	{
;;;94     		DemoCos_DelayNETU(4);
000076  2004              MOVS     r0,#4
000078  f7fffffe          BL       DemoCos_DelayNETU
;;;95     		if ((PPS_PPS0 & 0x9F) == 0x10) 
00007c  4838              LDR      r0,|L1.352|
00007e  7840              LDRB     r0,[r0,#1]  ; SCIAPDUBuf
000080  219f              MOVS     r1,#0x9f
000082  4008              ANDS     r0,r0,r1
000084  2810              CMP      r0,#0x10
000086  d123              BNE      |L1.208|
;;;96     		{
;;;97     			/* find FD */
;;;98     			if (PPS_PPS1 == 0x96)
000088  4835              LDR      r0,|L1.352|
00008a  7880              LDRB     r0,[r0,#2]  ; SCIAPDUBuf
00008c  2896              CMP      r0,#0x96
00008e  d11f              BNE      |L1.208|
;;;99     			{
;;;100    				G_FiDi = PPS_PPS1;
000090  4833              LDR      r0,|L1.352|
000092  7880              LDRB     r0,[r0,#2]  ; SCIAPDUBuf
000094  4933              LDR      r1,|L1.356|
000096  7008              STRB     r0,[r1,#0]
;;;101                    /* send pps response */
;;;102    				PPS_PPS0 = 0x10;
000098  2010              MOVS     r0,#0x10
00009a  4931              LDR      r1,|L1.352|
00009c  7048              STRB     r0,[r1,#1]
;;;103    				PPS_PPS2 = 0x79;
00009e  2079              MOVS     r0,#0x79
0000a0  70c8              STRB     r0,[r1,#3]
;;;104                    HED_T0_SendNBytes(&PPS_PPSS,1);
0000a2  2101              MOVS     r1,#1
0000a4  482e              LDR      r0,|L1.352|
0000a6  f7fffffe          BL       HED_T0_SendNBytes
;;;105                    HED_T0_SendNBytes(&PPS_PPS0,1);
0000aa  2101              MOVS     r1,#1
0000ac  482c              LDR      r0,|L1.352|
0000ae  1c40              ADDS     r0,r0,#1
0000b0  f7fffffe          BL       HED_T0_SendNBytes
;;;106                    HED_T0_SendNBytes(&PPS_PPS1,1);
0000b4  2101              MOVS     r1,#1
0000b6  482a              LDR      r0,|L1.352|
0000b8  1c80              ADDS     r0,r0,#2
0000ba  f7fffffe          BL       HED_T0_SendNBytes
;;;107                    HED_T0_SendNBytes(&PPS_PPS2,1);				
0000be  2101              MOVS     r1,#1
0000c0  4827              LDR      r0,|L1.352|
0000c2  1cc0              ADDS     r0,r0,#3
0000c4  f7fffffe          BL       HED_T0_SendNBytes
;;;108            SCITA1 = 0x96;               
0000c8  2096              MOVS     r0,#0x96
0000ca  4923              LDR      r1,|L1.344|
0000cc  6188              STR      r0,[r1,#0x18]
                  |L1.206|
;;;109    				return;
;;;110    			}
;;;111    		}
;;;112    		/* send pps err response */
;;;113            HED_T0_SendNBytes(&PPSFailRES[0],1);
;;;114            HED_T0_SendNBytes(&PPSFailRES[1],1);
;;;115            HED_T0_SendNBytes(&PPSFailRES[2],1);
;;;116    	}
;;;117    	else
;;;118    	{
;;;119    		/*means pps pck is err ,do nothing */
;;;120    	}
;;;121    }
0000ce  bdf8              POP      {r3-r7,pc}
                  |L1.208|
0000d0  2101              MOVS     r1,#1                 ;113
0000d2  4668              MOV      r0,sp                 ;113
0000d4  f7fffffe          BL       HED_T0_SendNBytes
0000d8  2101              MOVS     r1,#1                 ;114
0000da  a800              ADD      r0,sp,#0              ;114
0000dc  3001              ADDS     r0,#1                 ;114
0000de  f7fffffe          BL       HED_T0_SendNBytes
0000e2  2101              MOVS     r1,#1                 ;115
0000e4  a800              ADD      r0,sp,#0              ;115
0000e6  3002              ADDS     r0,#2                 ;115
0000e8  f7fffffe          BL       HED_T0_SendNBytes
                  |L1.236|
0000ec  bf00              NOP      
0000ee  e7ee              B        |L1.206|
;;;122    /****************************************************************************
                          ENDP

                  DemoCos_SendINS PROC
;;;129    ****************************************************************************/
;;;130    void DemoCos_SendINS(unsigned char ins)
0000f0  b501              PUSH     {r0,lr}
;;;131    {
;;;132        HED_T0_SendNBytes(&ins,1);//send INS
0000f2  2101              MOVS     r1,#1
0000f4  a800              ADD      r0,sp,#0
0000f6  3003              ADDS     r0,#3
0000f8  f7fffffe          BL       HED_T0_SendNBytes
;;;133    }
0000fc  bd08              POP      {r3,pc}
;;;134    /****************************************************************************
                          ENDP

                  SCI_StopTx60 PROC
;;;141    ****************************************************************************/ 
;;;142    void SCI_StopTx60(void)
0000fe  2000              MOVS     r0,#0
;;;143    {
;;;144        SCIS60CON = 0x00;//disable sending 0x60 by SCI IP
000100  4915              LDR      r1,|L1.344|
000102  61c8              STR      r0,[r1,#0x1c]
;;;145        while((SCISSR & BIT5) != 0);//wait TB == 0
000104  bf00              NOP      
                  |L1.262|
000106  4814              LDR      r0,|L1.344|
000108  6880              LDR      r0,[r0,#8]
00010a  2120              MOVS     r1,#0x20
00010c  4208              TST      r0,r1
00010e  d1fa              BNE      |L1.262|
;;;146        SCISSR = 0;//clear TI/RI/PE/OE
000110  2000              MOVS     r0,#0
000112  4911              LDR      r1,|L1.344|
000114  6088              STR      r0,[r1,#8]
;;;147    }
000116  4770              BX       lr
;;;148    /****************************************************************************
                          ENDP

                  SCI_Init PROC
;;;155    ****************************************************************************/
;;;156    void SCI_Init(void)
000118  4813              LDR      r0,|L1.360|
;;;157    {
;;;158    	SYSCLKEN |= BIT17;//enable SCI module clk		       
00011a  6800              LDR      r0,[r0,#0]
00011c  2101              MOVS     r1,#1
00011e  0449              LSLS     r1,r1,#17
000120  4308              ORRS     r0,r0,r1
000122  4911              LDR      r1,|L1.360|
000124  6008              STR      r0,[r1,#0]
;;;159        //SCISCON = 0xF53;//RTS==1,auto 0x3B sent by IP,SE=1,RCNT=3,other default setting
;;;160        SCISCON = 0xE53;//RTS==1,auto 0x3B sent by IP(AWTS=4096CLK),SE=1,RCNT=3,other default setting
000126  4811              LDR      r0,|L1.364|
000128  490b              LDR      r1,|L1.344|
00012a  6048              STR      r0,[r1,#4]
;;;161        SYSRSTCFG |= BIT2;//set 7816 rst to system rst
00012c  480e              LDR      r0,|L1.360|
00012e  3880              SUBS     r0,r0,#0x80
000130  6880              LDR      r0,[r0,#8]
000132  2104              MOVS     r1,#4
000134  4308              ORRS     r0,r0,r1
000136  490c              LDR      r1,|L1.360|
000138  3980              SUBS     r1,r1,#0x80
00013a  6088              STR      r0,[r1,#8]
;;;162    }
00013c  4770              BX       lr
;;;163    
                          ENDP

                  GlobalPARA_Init PROC
;;;171    ****************************************************************************/
;;;172    void GlobalPARA_Init(void)
00013e  480c              LDR      r0,|L1.368|
;;;173    {    
;;;174        SYSVR12PB = SFR_InitValue_Buffer[0];//modify default value of SFR here
000140  6800              LDR      r0,[r0,#0]  ; SFR_InitValue_Buffer
000142  4909              LDR      r1,|L1.360|
000144  3180              ADDS     r1,r1,#0x80
000146  6148              STR      r0,[r1,#0x14]
;;;175        SYSNVMVR12PB = SFR_InitValue_Buffer[1];//modify default value of SFR here
000148  4809              LDR      r0,|L1.368|
00014a  6840              LDR      r0,[r0,#4]  ; SFR_InitValue_Buffer
00014c  6188              STR      r0,[r1,#0x18]
;;;176        SYSVR18PB = SFR_InitValue_Buffer[2];//modify default value of SFR here
00014e  4808              LDR      r0,|L1.368|
000150  6880              LDR      r0,[r0,#8]  ; SFR_InitValue_Buffer
000152  61c8              STR      r0,[r1,#0x1c]
;;;177    }
000154  4770              BX       lr
                          ENDP

000156  0000              DCW      0x0000
                  |L1.344|
                          DCD      0x40001000
                  |L1.348|
00015c  ff00              DCB      255,0
00015e  ff00              DCB      255,0
                  |L1.352|
                          DCD      SCIAPDUBuf
                  |L1.356|
                          DCD      G_FiDi
                  |L1.360|
                          DCD      0x50007200
                  |L1.364|
                          DCD      0x00000e53
                  |L1.368|
                          DCD      SFR_InitValue_Buffer

                          AREA ||.ARM.__AT_0x00019000||, DATA, READONLY, ALIGN=2

                  SFR_InitValue_Buffer
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00020102
