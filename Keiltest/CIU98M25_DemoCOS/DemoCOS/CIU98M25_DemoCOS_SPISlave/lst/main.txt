; generated by ARM C/C++ Compiler, 5.03 [Build 76]
; commandline ArmCC [--thumb --list --debug -c --asm --interleave -o.\obj\main.o --asm_dir=.\lst\ --list_dir=.\lst\ --depend=.\obj\main.d --cpu=SC000 --bi --apcs=interwork -O0 -I.\INC -IC:\Keil_v4\ARM\RV31\INC -IC:\Keil_v4\ARM\CMSIS\Include -IC:\Keil_v4\ARM\Device\ARM\ARMSC000\Include --omf_browse=.\obj\main.crf SRC\main.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  main PROC
;;;48     ****************************************************************************/
;;;49     int main(void)
000000  f7fffffe          BL       closeWrSwitch
;;;50     {    
;;;51         closeWrSwitch();//disable NVM operation
;;;52         
;;;53         SYSCLKEN |= (1 << 18) | (1 << 19);//enable GPIO/SPI clk  
000004  4813              LDR      r0,|L1.84|
000006  6800              LDR      r0,[r0,#0]
000008  2103              MOVS     r1,#3
00000a  0489              LSLS     r1,r1,#18
00000c  4308              ORRS     r0,r0,r1
00000e  4911              LDR      r1,|L1.84|
000010  6008              STR      r0,[r1,#0]
;;;54         HED_DEMO_SPI_Init();//SPI init
000012  f7fffffe          BL       HED_DEMO_SPI_Init
;;;55     
;;;56         while(1)
000016  e00f              B        |L1.56|
                  |L1.24|
;;;57         {
;;;58             /*if run on Develepment Tool's DEBUG MODE,don't enter standby*/
;;;59             /*if run on Develepment Tool's RUN MODE,do enter standby*/        
;;;60             //HED_SetToStandby();
;;;61             HED_SPIS_ReceiveNBytesRam(SPIAPDUBuf,0x05); //Rx APDU
000018  2105              MOVS     r1,#5
00001a  480f              LDR      r0,|L1.88|
00001c  f7fffffe          BL       HED_SPIS_ReceiveNBytesRam
;;;62             openWrSwitch();//enable NVM operation            
000020  f7fffffe          BL       openWrSwitch
;;;63             DemoCos_APDU_Dispatch();            
000024  f7fffffe          BL       DemoCos_APDU_Dispatch
;;;64             closeWrSwitch();//disable NVM operation           
000028  f7fffffe          BL       closeWrSwitch
;;;65             SPIST &= ~1;
00002c  480b              LDR      r0,|L1.92|
00002e  6880              LDR      r0,[r0,#8]
000030  0840              LSRS     r0,r0,#1
000032  0040              LSLS     r0,r0,#1
000034  4909              LDR      r1,|L1.92|
000036  6088              STR      r0,[r1,#8]
                  |L1.56|
000038  e7ee              B        |L1.24|
;;;66         }
;;;67     }
;;;68     
                          ENDP

                  GlobalPARA_Init PROC
;;;76     ****************************************************************************/
;;;77     void GlobalPARA_Init(void)
00003a  4809              LDR      r0,|L1.96|
;;;78     {    
;;;79         SYSVR12PB = SFR_InitValue_Buffer[0];//modify default value of SFR here
00003c  6800              LDR      r0,[r0,#0]  ; SFR_InitValue_Buffer
00003e  4905              LDR      r1,|L1.84|
000040  3180              ADDS     r1,r1,#0x80
000042  6148              STR      r0,[r1,#0x14]
;;;80         SYSNVMVR12PB = SFR_InitValue_Buffer[1];//modify default value of SFR here
000044  4806              LDR      r0,|L1.96|
000046  6840              LDR      r0,[r0,#4]  ; SFR_InitValue_Buffer
000048  6188              STR      r0,[r1,#0x18]
;;;81         SYSVR18PB = SFR_InitValue_Buffer[2];//modify default value of SFR here
00004a  4805              LDR      r0,|L1.96|
00004c  6880              LDR      r0,[r0,#8]  ; SFR_InitValue_Buffer
00004e  61c8              STR      r0,[r1,#0x1c]
;;;82     }
000050  4770              BX       lr
;;;83     
                          ENDP

000052  0000              DCW      0x0000
                  |L1.84|
                          DCD      0x50007200
                  |L1.88|
                          DCD      SPIAPDUBuf
                  |L1.92|
                          DCD      0x40001800
                  |L1.96|
                          DCD      SFR_InitValue_Buffer

                          AREA ||.ARM.__AT_0x00019000||, DATA, READONLY, ALIGN=2

                  SFR_InitValue_Buffer
                          DCD      0x00000000
                          DCD      0x00000000
                          DCD      0x00020102

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  SPIAPDUBuf
                          %        200

                          AREA ||.data||, DATA, ALIGN=1

                  G_APDU_SxLen
000000  0000              DCB      0x00,0x00
                  SW1SW2
000002  0000              DCB      0x00,0x00

                  __ARM_use_no_argv EQU 0
